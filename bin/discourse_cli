#!/usr/bin/env ruby
require 'discourse_cli'

CONFIG_FILE = "#{Dir.home}/.discourse_cli.yml"
config = {}
if File.file?(CONFIG_FILE)
  config = YAML.load_file(CONFIG_FILE)
else
  puts "Please create a ~/.discourse_cli.yml config file."
  exit 1
end

command_string = ARGV
if command_string.nil? || command_string.empty?
  puts "A command-line tool to interact with Discourse sites."
  puts
  puts "Usage:"
  puts "  discourse_cli [command]"
  puts
  puts "Topic commands:"
  puts "  topic list latest      List the latest topics"
  puts "  topic create --title <title> --body <body>"
  puts
  puts "Flags:"
  puts "  --site string          Specify a different site other than the default"
  # TODO: Auto generate a list of available commands
end

# Check for --options
options = {}
commands = []
command_string.each_with_index do |element, i|
  if element[0..1] == "--"
    options[element] = command_string[i+1]
    i += 1
  else
    commands << element
  end
end

site = nil
if options["--site"]
  site = options["--site"]
end

# Output formats to support (text, table, json)

cli = DiscourseCLI::App.new(config, site)

command = commands[0]

case command
when "topic"
  # check for 2nd options
  topic_command = command_string[1]
  case topic_command
  when "list"
    # latest, top, new
    list_command = command_string[2]
    case list_command
    when "latest"
      topics = cli.topic.list_latest
    end
  when "create"
    params = {
      title: options["--title"],
      raw: options["--body"]
    }
    cli.topic.create(params)
  end
end

